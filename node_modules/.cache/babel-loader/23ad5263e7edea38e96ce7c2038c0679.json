{"ast":null,"code":"var _jsxFileName = \"/media/assassin/WORKS/Works/REACT/login-form/src/pages/cart/CartItems.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport { storeproducts } from \"../../components/homecontent/Data\";\nimport { connect } from \"react-redux\";\nimport { decrementAction } from \"../../redux/cart/decrementCart\";\nimport { incrementAction } from \"../../redux/cart/incrementCart\";\nimport { removeItem } from \"../../redux/cart/removeItem\";\n\nclass CartItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: storeproducts\n    };\n  }\n\n  render() {\n    // console.log(this.props);\n    var cartItem = this.props.cart.map(cartz => cartz);\n    var lists = [];\n\n    for (let i = 0; i < cartItem.length; i++) {\n      lists[i] = this.state.products.find(pro => pro.id == cartItem[i].product_id);\n      lists[i].quantity = cartItem[i].quantity;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = states => {\n  return {\n    cart: states.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    decrementAction: prd_id => dispatch(decrementAction(prd_id)),\n    incrementAction: prd_id => dispatch(incrementAction(prd_id)),\n    removeItem: prd_id => dispatch(removeItem(prd_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItems);","map":{"version":3,"sources":["/media/assassin/WORKS/Works/REACT/login-form/src/pages/cart/CartItems.js"],"names":["React","Component","storeproducts","connect","decrementAction","incrementAction","removeItem","CartItems","constructor","props","state","products","render","cartItem","cart","map","cartz","lists","i","length","find","pro","id","product_id","quantity","mapStateToProps","states","mapDispatchToProps","dispatch","prd_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC9BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAET;AADD,KAAb;AAGH;;AAGDU,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,GAAhB,CAAoBC,KAAK,IAAKA,KAA9B,CAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,KAAKR,KAAL,CAAWC,QAAX,CAAoBS,IAApB,CAAyBC,GAAG,IAAKA,GAAG,CAACC,EAAJ,IAAUT,QAAQ,CAACK,CAAD,CAAR,CAAYK,UAAvD,CAAX;AACAN,MAAAA,KAAK,CAACC,CAAD,CAAL,CAASM,QAAT,GAAoBX,QAAQ,CAACK,CAAD,CAAR,CAAYM,QAAhC;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAgCH;;AAjD6B;;AAoDlC,MAAMC,eAAe,GAAIC,MAAD,IAAY;AAChC,SAAO;AACHZ,IAAAA,IAAI,EAAEY,MAAM,CAACZ;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFxB,IAAAA,eAAe,EAAIyB,MAAD,IAAYD,QAAQ,CAACxB,eAAe,CAACyB,MAAD,CAAhB,CADpC;AAEFxB,IAAAA,eAAe,EAAIwB,MAAD,IAAYD,QAAQ,CAACvB,eAAe,CAACwB,MAAD,CAAhB,CAFpC;AAGFvB,IAAAA,UAAU,EAAIuB,MAAD,IAAYD,QAAQ,CAACtB,UAAU,CAACuB,MAAD,CAAX;AAH/B,GAAN;AAKH,CAND;;AAQA,eAAe1B,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './styles.css'\nimport { storeproducts } from \"../../components/homecontent/Data\";\nimport { connect } from \"react-redux\";\nimport { decrementAction } from \"../../redux/cart/decrementCart\";\nimport { incrementAction } from \"../../redux/cart/incrementCart\";\nimport { removeItem } from \"../../redux/cart/removeItem\";\n\nclass CartItems extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: storeproducts\n        }\n    }\n \n\n    render() {\n        // console.log(this.props);\n        var cartItem = this.props.cart.map(cartz => (cartz))\n        var lists = [];\n        for (let i = 0; i < cartItem.length; i++) {\n            lists[i] = this.state.products.find(pro => (pro.id == cartItem[i].product_id))\n            lists[i].quantity = cartItem[i].quantity\n        }\n        return (\n            <div>\n                <div className=\"container\">\n                    {/* <table className=\"table table-light table-bordered\">\n                        <thead><tr>\n                            <th>Sl No</th>\n                            <th>Name</th>\n                            <th></th>\n                            <th>Price</th>\n                            <th>Quantity</th>\n                            <th>Total</th>\n                            <th>Action</th>\n                        </tr></thead>\n                        <tbody>\n                            {\n                                lists.map(cartProd => (\n                                    <tr key={cartProd.id}>\n                                        <td>1</td>\n                                        <td>{cartProd.name}</td>\n                                        <td><img className=\"image-sizes\" src={cartProd.imgUrl} alt=\"No Image\" /></td>\n                                        <td>{cartProd.price}</td>\n                                        <td><button onClick = {() => this.props.decrementAction(cartProd.id)}><i className = \"fas fa-minus\"></i></button><input type=\"number\" value={cartProd.quantity} className=\"quantity_input\" readOnly/><button onClick={() => this.props.incrementAction(cartProd.id)}><i className = \"fas fa-plus\"></i></button></td>\n                                        <td>{cartProd.quantity * cartProd.price}</td>\n                                        <td><button onClick = {() => this.props.removeItem(cartProd.id)} className=\"btn btn-danger\"><i className=\"fas fa-trash\"></i></button></td></tr>\n                                ))}\n                        </tbody>\n\n                    </table> */}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (states) => {\n    return {\n        cart: states.cart\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        decrementAction : (prd_id) => dispatch(decrementAction(prd_id)),\n        incrementAction : (prd_id) => dispatch(incrementAction(prd_id)),\n        removeItem : (prd_id) => dispatch(removeItem(prd_id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItems)"]},"metadata":{},"sourceType":"module"}